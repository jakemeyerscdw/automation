#! /bin/bash
# /etc/init.d/userify
#
# userify init script, to be used with /opt/userify/ansible-shim.sh by Brad Pinter.
#
# @author Jeff Geerling

### BEGIN INIT INFO
# Provides:          userify
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start userify at boot time.
# Description:       Enable the userify.
### END INIT INFO

PIDFILE=/var/run/userify.pid
LOGFILE=/var/log/shim.log

start() {
    echo
    echo -n "Starting userify."
    echo
    if [ -f $PIDFILE ]; then
	    PID=`cat $PIDFILE`
	    echo userify already running: $PID
	    exit 2;
    else
	    NOW=$(date +"%c")
	    echo ""
	    echo "[shim] starting: $NOW" > $LOGFILE
	    echo "ansible-shim.sh starting: $NOW"

	    /opt/userify/ansible-shim.sh &
	    RETVAL=$?
	    echo
	    return $RETVAL
    fi

}

stop() {
    echo
    echo -n "Stopping userify."
    echo
    if [ -f $PIDFILE ]; then
	    PID=`cat $PIDFILE`
	    tic=""
	    toc="."
	    while [ -e /proc/$PID ]; do
		    tic=$tic$toc
		    echo "waiting for userify to stop gracefully$tic"
		    sleep 1
	    done

	    NOW=$(date +"%c")
	    echo ""
	    echo "[shim] stopped: $NOW" >> $LOGFILE
	    echo "ansible-shim.sh stopped: $NOW"
    fi

    killall shim.py shim.sh ansible-shim.sh 2>/dev/null
    rm -rf $PIDFILE
}

status() {
    echo
    echo -n "userify status."
    echo
    cat $LOGFILE
    if [ -f $PIDFILE ]; then
	    echo 
	    PID=`cat $PIDFILE`
	    if [ -e /proc/$PID ]; then
	        echo "userify is running: $PID"
    	    else
	        echo "$PID is stale...userify is probably sleeping..."
            fi
    fi
}

# Carry out specific functions when asked to by the system
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status 
    ;;
  *)
    echo "Usage: /etc/init.d/userify {start|stop|status|restart}"
    exit 1
    ;;
esac

exit 0
